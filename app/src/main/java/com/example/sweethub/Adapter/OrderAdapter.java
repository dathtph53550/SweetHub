package com.example.sweethub.Adapter;import android.content.Context;import android.graphics.Color;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.bumptech.glide.Glide;import com.example.sweethub.Model.Product;import com.example.sweethub.R;import com.example.sweethub.ResponseDataOrderCode;import java.util.List;public class OrderAdapter extends RecyclerView.Adapter<OrderAdapter.OrderViewHolder> {    private Context context;    private List<ResponseDataOrderCode> responseDataOrderCodeList;    public OrderAdapter(Context context, List<ResponseDataOrderCode> responseDataOrderCodeList) {        this.context = context;        this.responseDataOrderCodeList = responseDataOrderCodeList;    }    @NonNull    @Override    public OrderViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(context).inflate(R.layout.order_item, parent, false);        return new OrderViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull OrderViewHolder holder, int position) {        ResponseDataOrderCode dataOrderCode = responseDataOrderCodeList.get(position);        String itemName = "";        String itemQuantity = "";        if (dataOrderCode.getData() != null && dataOrderCode.getData().getItems() != null && !dataOrderCode.getData().getItems().isEmpty()) {            itemName = dataOrderCode.getData().getItems().get(0).getName();            itemQuantity = dataOrderCode.getData().getItems().get(0).getQuantity();        }        String toAddress = dataOrderCode.getData().getToAddress();        holder.textTitle.setText(itemName);        holder.textDescribe.setText(toAddress);        holder.textPrice.setText( dataOrderCode.getData().getCod_amount() + " đ");        holder.textStatus.setText("Đang chờ lấy");        holder.tv_quantity.setText("Số Lượng: " + itemQuantity);        holder.textStatus.setTextColor(Color.BLUE);        Log.d("ttttt", "onBindViewHolder: " + itemQuantity);        Log.d("ppppppppp", "onBindViewHolder: " + itemName + toAddress + dataOrderCode.getData().getItems() + dataOrderCode.getData().getToAddress());    }    @Override    public int getItemCount() {        return responseDataOrderCodeList.size();    }    public static class OrderViewHolder extends RecyclerView.ViewHolder {        TextView textTitle, textDescribe, textPrice, textStatus, tv_quantity;        public OrderViewHolder(@NonNull View itemView) {            super(itemView);            textTitle = itemView.findViewById(R.id.textTitle);            textDescribe = itemView.findViewById(R.id.textDescribe);            textPrice = itemView.findViewById(R.id.textPrice);            textStatus = itemView.findViewById(R.id.textStatus);            tv_quantity = itemView.findViewById(R.id.tv_quantity);        }    }}