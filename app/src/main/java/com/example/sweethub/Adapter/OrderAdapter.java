package com.example.sweethub.Adapter;import android.content.Context;import android.graphics.Color;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.bumptech.glide.Glide;import com.example.sweethub.Model.Product;import com.example.sweethub.R;import com.example.sweethub.ResponseDataOrderCode;import java.util.List;////public class OrderAdapter extends RecyclerView.Adapter<OrderAdapter.OrderViewHolder> {////    private Context context;//    private List<ResponseDataOrderCode> ResponseDataOrderCode;////    public OrderAdapter(Context context, List<com.example.sweethub.ResponseDataOrderCode> responseDataOrderCode) {//        this.context = context;//        ResponseDataOrderCode = responseDataOrderCode;//    }////    @NonNull//    @Override//    public OrderViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {//        View view = LayoutInflater.from(context).inflate(R.layout.order_item, parent, false);//        return new OrderViewHolder(view);//    }////    @Override//    public void onBindViewHolder(@NonNull OrderViewHolder holder, int position) {//        ResponseDataOrderCode dataOrderCode = ResponseDataOrderCode.get(position);//        String itemName = "";//        if (dataOrderCode.getData() != null && dataOrderCode.getData().getItems() != null && !dataOrderCode.getData().getItems().isEmpty()) {//            itemName = dataOrderCode.getData().getItems().get(0).getName();//        }////        String toAddress = dataOrderCode.getData().getToAddress();////        holder.textTitle.setText(itemName);//        holder.textDescribe.setText(toAddress);////        holder.textPrice.setText("$" + String.format("%.2f", 20.0));//        holder.textStatus.setText("Available");//        holder.textStatus.setTextColor(Color.parseColor("#4CAF50"));////    }////    @Override//    public int getItemCount() {//        return ResponseDataOrderCode.size();//    }////    public static class OrderViewHolder extends RecyclerView.ViewHolder {//        TextView textTitle, textDescribe, textPrice, textStatus;////        public OrderViewHolder(@NonNull View itemView) {//            super(itemView);//            textTitle = itemView.findViewById(R.id.textTitle);//            textDescribe = itemView.findViewById(R.id.textDescribe);//            textPrice = itemView.findViewById(R.id.textPrice);//            textStatus = itemView.findViewById(R.id.textStatus);//        }//    }//}//public class OrderAdapter extends RecyclerView.Adapter<OrderAdapter.OrderViewHolder> {    private Context context;    private List<ResponseDataOrderCode> responseDataOrderCodeList;    public OrderAdapter(Context context, List<ResponseDataOrderCode> responseDataOrderCodeList) {        this.context = context;        this.responseDataOrderCodeList = responseDataOrderCodeList;    }    @NonNull    @Override    public OrderViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(context).inflate(R.layout.order_item, parent, false);        return new OrderViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull OrderViewHolder holder, int position) {        ResponseDataOrderCode dataOrderCode = responseDataOrderCodeList.get(position);        String itemName = "";        if (dataOrderCode.getData() != null && dataOrderCode.getData().getItems() != null && !dataOrderCode.getData().getItems().isEmpty()) {            itemName = dataOrderCode.getData().getItems().get(0).getName();        }        String toAddress = dataOrderCode.getData().getToAddress();        holder.textTitle.setText(itemName);        holder.textDescribe.setText(toAddress);        holder.textPrice.setText("$" + String.format("%.2f", 20.0));        holder.textStatus.setText("Đang chờ lấy");        holder.textStatus.setTextColor(Color.parseColor("#FFFF00"));    }    @Override    public int getItemCount() {        return responseDataOrderCodeList.size();    }    public static class OrderViewHolder extends RecyclerView.ViewHolder {        TextView textTitle, textDescribe, textPrice, textStatus;        public OrderViewHolder(@NonNull View itemView) {            super(itemView);            textTitle = itemView.findViewById(R.id.textTitle);            textDescribe = itemView.findViewById(R.id.textDescribe);            textPrice = itemView.findViewById(R.id.textPrice);            textStatus = itemView.findViewById(R.id.textStatus);        }    }}